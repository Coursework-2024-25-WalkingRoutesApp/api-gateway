name: Build and Deploy

on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Read version from build.gradle.kts
        run: echo "VERSION=$(./gradlew -q properties | grep '^version:' | awk '{print $2}')" >> $GITHUB_ENV

      - name: Build JAR
        run: ./gradlew clean bootJar -x test -P version=${{ env.VERSION }}

      - name: Verify JAR exists
        run: ls -la build/libs/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image with version and latest
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_IMAGE_FULL }}:api-gateway-${{ env.VERSION }}
            ${{ secrets.DOCKER_IMAGE_FULL }}:api-gateway-latest
          build-args: |
            VERSION=${{ env.VERSION }}
            DEV_ENV_HOST_PROVIDER=${{ secrets.DEV_ENV_HOST_PROVIDER }}
            DEV_ENV_HOST_SECURITY=${{ secrets.DEV_ENV_HOST_SECURITY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            SERVER_PORT=${{ secrets.SERVER_PORT }}

  deploy:
    name: Deploy on Self-Hosted Server
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Stop and remove existing container (if any)
        run: docker rm -f api-gateway || true

      - name: Pull image from DockerHub
        run: docker pull ${{ secrets.DOCKER_IMAGE_FULL }}:api-gateway-latest

      - name: Run Docker container
        run: |
          docker run -d --network walking_routes_network --name api-gateway \
            -e DEV_ENV_HOST_PROVIDER=${{ secrets.DEV_ENV_HOST_PROVIDER }} \
            -e DEV_ENV_HOST_SECURITY=${{ secrets.DEV_ENV_HOST_SECURITY }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -p ${{ secrets.SERVER_PORT_PUBLIC }}:${{ secrets.SERVER_PORT }} \
            ${{ secrets.DOCKER_IMAGE_FULL }}:api-gateway-latest
